// Generated by view binder compiler. Do not edit!
package com.example.jjangu_diary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jjangu_diary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MemoDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView txtContent2;

  @NonNull
  public final TextView txtDate2;

  @NonNull
  public final TextView txtWeather2;

  private MemoDetailBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSave,
      @NonNull ImageView imageView, @NonNull TextView txtContent2, @NonNull TextView txtDate2,
      @NonNull TextView txtWeather2) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.imageView = imageView;
    this.txtContent2 = txtContent2;
    this.txtDate2 = txtDate2;
    this.txtWeather2 = txtWeather2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MemoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MemoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.memo_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MemoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.txtContent2;
      TextView txtContent2 = ViewBindings.findChildViewById(rootView, id);
      if (txtContent2 == null) {
        break missingId;
      }

      id = R.id.txtDate2;
      TextView txtDate2 = ViewBindings.findChildViewById(rootView, id);
      if (txtDate2 == null) {
        break missingId;
      }

      id = R.id.txtWeather2;
      TextView txtWeather2 = ViewBindings.findChildViewById(rootView, id);
      if (txtWeather2 == null) {
        break missingId;
      }

      return new MemoDetailBinding((ConstraintLayout) rootView, btnSave, imageView, txtContent2,
          txtDate2, txtWeather2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
